<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bankofshanghai.mapper.BankDataMapper" >
  <resultMap id="BaseResultMap" type="com.bankofshanghai.pojo.BankData" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="fromuser" property="fromuser" jdbcType="INTEGER" />
    <result column="touser" property="touser" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="datetime" property="datetime" jdbcType="TIMESTAMP" />
    <result column="fromplace" property="fromplace" jdbcType="VARCHAR" />
    <result column="toplace" property="toplace" jdbcType="VARCHAR" />
    <result column="tool" property="tool" jdbcType="VARCHAR" />
    <result column="safe_level" property="safeLevel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, fromuser, touser, money, datetime, fromplace, toplace, tool, safe_level
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bankofshanghai.pojo.BankDataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bank_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from bank_data
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from bank_data
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bankofshanghai.pojo.BankDataExample" >
    delete from bank_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bankofshanghai.pojo.BankData" >
    insert into bank_data (id, fromuser, touser, 
      money, datetime, fromplace, 
      toplace, tool, safe_level
      )
    values (#{id,jdbcType=BIGINT}, #{fromuser,jdbcType=INTEGER}, #{touser,jdbcType=INTEGER}, 
      #{money,jdbcType=DECIMAL}, #{datetime,jdbcType=TIMESTAMP}, #{fromplace,jdbcType=VARCHAR}, 
      #{toplace,jdbcType=VARCHAR}, #{tool,jdbcType=VARCHAR}, #{safeLevel,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bankofshanghai.pojo.BankData" >
    insert into bank_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fromuser != null" >
        fromuser,
      </if>
      <if test="touser != null" >
        touser,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="datetime != null" >
        datetime,
      </if>
      <if test="fromplace != null" >
        fromplace,
      </if>
      <if test="toplace != null" >
        toplace,
      </if>
      <if test="tool != null" >
        tool,
      </if>
      <if test="safeLevel != null" >
        safe_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fromuser != null" >
        #{fromuser,jdbcType=INTEGER},
      </if>
      <if test="touser != null" >
        #{touser,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="datetime != null" >
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromplace != null" >
        #{fromplace,jdbcType=VARCHAR},
      </if>
      <if test="toplace != null" >
        #{toplace,jdbcType=VARCHAR},
      </if>
      <if test="tool != null" >
        #{tool,jdbcType=VARCHAR},
      </if>
      <if test="safeLevel != null" >
        #{safeLevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bankofshanghai.pojo.BankDataExample" resultType="java.lang.Integer" >
    select count(*) from bank_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bank_data
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.fromuser != null" >
        fromuser = #{record.fromuser,jdbcType=INTEGER},
      </if>
      <if test="record.touser != null" >
        touser = #{record.touser,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.datetime != null" >
        datetime = #{record.datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fromplace != null" >
        fromplace = #{record.fromplace,jdbcType=VARCHAR},
      </if>
      <if test="record.toplace != null" >
        toplace = #{record.toplace,jdbcType=VARCHAR},
      </if>
      <if test="record.tool != null" >
        tool = #{record.tool,jdbcType=VARCHAR},
      </if>
      <if test="record.safeLevel != null" >
        safe_level = #{record.safeLevel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bank_data
    set id = #{record.id,jdbcType=BIGINT},
      fromuser = #{record.fromuser,jdbcType=INTEGER},
      touser = #{record.touser,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DECIMAL},
      datetime = #{record.datetime,jdbcType=TIMESTAMP},
      fromplace = #{record.fromplace,jdbcType=VARCHAR},
      toplace = #{record.toplace,jdbcType=VARCHAR},
      tool = #{record.tool,jdbcType=VARCHAR},
      safe_level = #{record.safeLevel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bankofshanghai.pojo.BankData" >
    update bank_data
    <set >
      <if test="fromuser != null" >
        fromuser = #{fromuser,jdbcType=INTEGER},
      </if>
      <if test="touser != null" >
        touser = #{touser,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="datetime != null" >
        datetime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromplace != null" >
        fromplace = #{fromplace,jdbcType=VARCHAR},
      </if>
      <if test="toplace != null" >
        toplace = #{toplace,jdbcType=VARCHAR},
      </if>
      <if test="tool != null" >
        tool = #{tool,jdbcType=VARCHAR},
      </if>
      <if test="safeLevel != null" >
        safe_level = #{safeLevel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bankofshanghai.pojo.BankData" >
    update bank_data
    set fromuser = #{fromuser,jdbcType=INTEGER},
      touser = #{touser,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      fromplace = #{fromplace,jdbcType=VARCHAR},
      toplace = #{toplace,jdbcType=VARCHAR},
      tool = #{tool,jdbcType=VARCHAR},
      safe_level = #{safeLevel,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>